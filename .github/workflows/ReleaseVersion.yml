name: Release on PR Merge

on:
    pull_request:
        types:
            - closed
    
    workflow_dispatch:
        inputs:
            tagName:
                description: "Tag Name"
                required: true
                default: "vX.X.X.X"

permissions:
    contents: write
    packages: write

jobs:
    validate-tag:
        if: github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        steps:
            - name: Validate Tag Name
              run: |
                  if [[ ! "${{ github.event.inputs.tagName }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                    echo "Invalid tag name format. Please use the format vX.X.X.X"
                    exit 1
                  fi
    
    release:
        if: (github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')) || (github.event_name == 'workflow_dispatch')
        runs-on: windows-latest
        needs: validate-tag
        environment: Release
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Set Tag Name for PR Merge
              if: github.event_name == 'pull_request'
              run: echo "TAG_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

            - name: Set Tag Name for Workflow Dispatch
              if: github.event_name == 'workflow_dispatch'
              run: echo "TAG_NAME=${{ github.event.inputs.tagName }}" >> $GITHUB_ENV

            - name: Build and Publish
              uses: ./.github/templates/ReleaseAndPublish

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  path: ./publish/PenumbraModForwarder.zip
                  retention-days: 3
                  name: "artifact"

            - name: Create Release
              uses: softprops/action-gh-release@v2.0.8
              with:
                  tag_name: ${{ env.TAG_NAME }}
                  files: ./publish/PenumbraModForwarder.zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
